<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Video AI — Dịch vụ làm video chúc mừng sinh nhật (20.000₫)</title>
  <meta name="description" content="Dịch vụ làm video AI: nhóm các anh da đen chúc mừng sinh nhật. Upload ảnh, nhập tên, thanh toán 20k, nhận video qua Email hoặc Zalo."/>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap" rel="stylesheet">
  <style>
    :root{
      --bg:#f6fbff; --card:#ffffff; --accent:#1373e6; --muted:#6b7c93; --radius:14px; --accent-2:#67a8ff;
    }
    *{box-sizing:border-box}
    body{font-family:Inter,system-ui,Arial;margin:0;padding:28px;background:linear-gradient(180deg,#f6fbff,#eef6ff);color:#082235;}
    .wrap{width:100%;max-width:1100px;margin:0 auto}
    header{display:flex;gap:16px;align-items:center;margin-bottom:20px}
    .logo{width:72px;height:72px;border-radius:14px;background:linear-gradient(135deg,var(--accent),var(--accent-2));display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px;box-shadow:0 8px 24px rgba(19,115,230,0.18)}
    h1{margin:0;font-size:22px}
    p.lead{margin:4px 0 0 0;color:var(--muted)}

    .grid{display:grid;grid-template-columns:1fr 380px;gap:22px}
    .card{background:var(--card);padding:18px;border-radius:var(--radius);box-shadow:0 10px 30px rgba(8,34,53,0.06)}

    label{display:block;margin-top:12px;font-weight:600;color:#0b2a44}
    input[type="text"], input[type="email"], input[type="file"], select, textarea, button{
      width:100%;padding:12px;border-radius:10px;border:1px solid #e6eef8;margin-top:8px;font-size:15px;background:transparent;color:inherit;
    }
    textarea{min-height:110px;resize:vertical}
    .small{font-size:13px;color:var(--muted)}

    .price{display:inline-block;padding:8px 12px;border-radius:10px;background:linear-gradient(90deg,#eaf4ff,#d8ecff);color:var(--accent);font-weight:800}
    .btn{display:inline-block;padding:12px;border-radius:10px;border:none;background:var(--accent);color:#fff;font-weight:700;cursor:pointer;text-align:center}
    .btn.ghost{background:#fff;border:1px solid #e6eef8;color:var(--accent)}

    .video-wrap{position:relative;padding-bottom:56.25%;height:0;overflow:hidden;border-radius:10px}
    .video-wrap iframe{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:10px}

    .uploader{display:flex;gap:12px;align-items:center}
    .thumb{width:120px;height:120px;border-radius:10px;object-fit:cover;border:1px solid #e6eef8;background:#f8fbff}
    .meta{flex:1}

    .qr-img{width:220px;height:220px;border-radius:12px;border:1px solid #e6eef8;display:block;margin:12px auto;background:#ffffff;padding:8px}

    /* VÔ HIỆU HÓA ADMIN VÀ LOCAL STORAGE */
    .admin-link, #adminModal { display: none !important; }

    /* fireworks canvas */
    #fireworks{position:fixed;left:0;top:0;pointer-events:none;width:100%;height:100%;z-index:999}

    @media (max-width:980px){
      .grid{grid-template-columns:1fr}
      .qr-img{width:200px;height:200px}
    }
  </style>
</head>
<body>
  <canvas id="fireworks"></canvas>
  <div class="wrap">
    <header>
      <div class="logo">AI</div>
      <div>
        <h1>DỊCH VỤ VIDEO AI — Nhóm anh da đen chúc mừng sinh nhật</h1>
        <p class="lead">Video vui nhộn, ghép ảnh theo yêu cầu — <strong>Đồng giá: 20.000₫</strong></p>
      </div>
    </header>

    <div class="grid">
      <div>
        <section class="card">
          <h2 style="color:var(--accent);margin:0 0 8px 0">Video mẫu</h2>
          <div class="video-wrap">
            <iframe id="sampleVideoFrame" src="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
          </div>
          <p class="small" style="margin-top:8px">Mẫu video sẽ thay đổi khi bạn chọn mẫu trong form đặt hàng bên dưới.</p>
        </section>

        <section class="card" aria-label="Đặt hàng">
          <h2 style="color:var(--accent);margin:0 0 6px 0">Đặt làm video — 20.000₫</h2>
          <p class="small">Điền thông tin, quét QR để chuyển khoản, xác nhận — chúng tôi làm thủ công và gửi video trong vòng 24 giờ.</p>

          <form id="orderForm" autocomplete="off">
            <label for="customer_name">Họ & tên khách hàng <span style="color:#d00">*</span></label>
            <input id="customer_name" name="customer_name" type="text" required placeholder="Nguyễn Văn A">

            <label for="birthday_name">Tên người được chúc <span style="color:#d00">*</span></label>
            <input id="birthday_name" name="birthday_name" type="text" required placeholder="Ví dụ: Minh">
            
            <label for="video_model">Chọn Mẫu Video <span style="color:#d00">*</span></label>
            <select id="video_model" name="video_model" required>
                </select>

            <div style="display:flex;gap:12px;flex-wrap:wrap">
              <div style="flex:1">
                <label for="email">Email liên hệ</label>
                <input id="email" name="email" type="email" placeholder="you@example.com">
              </div>
              <div style="width:160px">
                <label for="zalo">Số Zalo</label>
                <input id="zalo" name="zalo" type="text" placeholder="0947262458">
              </div>
            </div>

            <label for="message">Lời nhắn cho clip (tùy chọn)</label>
            <textarea id="message" name="message" placeholder="Ví dụ: Chúc mừng sinh nhật Minh! Chúc bạn luôn vui vẻ."></textarea>

            <label>Ảnh khách hàng (bắt buộc để ghép)</label>
            <div class="uploader">
              <div>
                <img id="preview" class="thumb" alt="Preview" src="data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='360' height='360'><rect width='100%25' height='100%25' fill='%23f8fbff'/><text x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' fill='%236b7c93' font-size='20'>Chưa có ảnh</text></svg>">
              </div>
              <div class="meta">
                <input id="user_image" name="user_image_file" type="file" accept="image/*" required>
                <div class="small">Chọn ảnh rõ mặt (jpg/png). Ảnh lớn sẽ cho kết quả tốt hơn.</div>
              </div>
            </div>

            <label for="payment_image">(Tùy chọn) Ảnh chụp màn hình chuyển khoản</label>
            <input id="payment_image" name="payment_image_file" type="file" accept="image/*">

            <div style="display:flex;justify-content:space-between;align-items:center;margin-top:12px">
              <div>
                <div class="small">Giá cố định</div>
                <div class="price">20.000₫</div>
              </div>
              <div class="small">Thanh toán: MB Bank</div>
            </div>

            <div style="margin-top:14px;display:flex;gap:10px;flex-wrap:wrap">
              <button type="button" id="btnShowPay" class="btn">Tiếp tục thanh toán</button>
              <button type="reset" class="btn ghost">Xóa form</button>
            </div>
          </form>
        </section>

        <section class="card" id="confirmNote" style="display:none">
          <h3 style="color:var(--accent);margin:0">Cảm ơn — Đơn hàng đã được gửi</h3>
          <p class="small">Chúng tôi đã nhận được thông tin. Video sẽ được xử lý thủ công và gửi về Email hoặc Zalo trong vòng 24 giờ.</p>
          <div class="small">Liên hệ hỗ trợ Zalo: <a href="https://zalo.me/0947262458" target="_blank">0947262458</a> — Email: <strong>minhhung932008@gmail.com</strong></div>
        </section>
      </div>

      <aside>
        <div class="card">
          <div style="display:flex;align-items:center;justify-content:space-between">
            <div>
              <div class="small">Gói</div>
              <div style="font-size:20px;font-weight:800">Video AI Sinh Nhật</div>
            </div>
            <div style="text-align:right">
              <div class="small">Giá</div>
              <div class="price">20.000₫</div>
            </div>
          </div>

          <hr style="border:none;border-top:1px solid #f1f8ff;margin:14px 0">

          <div>
            <h4 style="margin:0 0 6px 0;color:var(--accent)">Thanh toán</h4>
            <div style="padding:12px;border-radius:10px;background:#f7fbff;border:1px solid #e6f4ff">
              <div><strong>Ngân hàng:</strong> MB Bank</div>
              <div><strong>Chủ TK:</strong> LE MINH HUNG</div>
              <div><strong>Số TK:</strong> 7862583813845</div>
              <div class="small" style="margin-top:6px"><strong>Số tiền:</strong> 20.000₫</div>
            </div>

            <div id="paymentCard" style="display:none;margin-top:12px;text-align:center">
              <p class="small">Quét mã VietQR để thanh toán nhanh</p>
              <img id="qrImg" class="qr-img" alt="VietQR thanh toán" src="" />
              <p class="small">Hoặc chuyển khoản thủ công; nội dung: <em>VIDEOAI - <tên khách></em></p>
              <div style="display:flex;gap:8px;justify-content:center;margin-top:8px">
                <button id="btnIpaid" class="btn">Tôi đã chuyển khoản — Xác nhận</button>
                <button id="btnBack" class="btn ghost">Quay lại</button>
              </div>
            </div>

            <div id="afterPaid" style="display:none;margin-top:12px">
              <div class="small">Đã xác nhận thanh toán. Chọn cách nhận video:</div>
              <select id="finalMethod" name="delivery_method" style="width:100%;padding:10px;border-radius:8px;border:1px solid #e6eef8;margin-top:8px">
                <option value="Email">Gửi về Email</option>
                <option value="Zalo">Gửi về Zalo</option>
              </select>
              <button id="btnSubmitOrder" class="btn" style="margin-top:12px;width:100%">Hoàn tất & Gửi đơn</button>
              <div id="orderResult" class="small" style="margin-top:10px;color:var(--muted)"></div>
            </div>
          </div>
        </div>

        <div class="card" style="margin-top:14px;text-align:center">
          <h4 style="margin:0 0 8px 0;color:var(--accent)">Hỗ trợ</h4>
          <a class="btn ghost" href="https://zalo.me/0947262458" target="_blank" rel="noopener">Chat Zalo: 0947262458</a>
          <p class="small" style="margin-top:8px">Email: <strong>minhhung932008@gmail.com</strong></p>
        </div>
      </aside>
    </div>

    <footer style="margin-top:18px;text-align:center;color:var(--muted);font-size:13px">Dữ liệu đơn hàng được gửi trực tiếp đến Telegram Bot.</footer>
  </div>

<script>
// =======================================================
// CONFIG TELEGRAM BOT (ĐÃ THÊM THÔNG TIN CỦA BẠN)
// =======================================================
const TELEGRAM_BOT_TOKEN = "8298657904:AAHSZxSosF8qoIFHhOGkRg2fgccLObgdSn8"; 
const TELEGRAM_CHAT_ID = "5669336093"; 
// =======================================================

// CONFIG VIDEO SAMPLES
const VIDEO_SAMPLES = [
    { name: "Mẫu 1: FhJM5_CUwIE (Nhạc vui)", id: "FhJM5_CUwIE" },
    { name: "Mẫu 2: dQTGqzHt8TQ (Nhóm đông)", id: "dQTGqzHt8TQ" },
    { name: "Mẫu 3: LqVHIsmrytM (Lời chúc chân thành)", id: "LqVHIsmrytM" },
    { name: "Mẫu 4: fzd14e7TrgE (Hài hước, ngắn)", id: "fzd14e7TrgE" },
    { name: "Mẫu 5: RXU7RmC86gc (Gần gũi)", id: "RXU7RmC86gc" },
];

const AMOUNT = 20000;
const BANK_CODE = 'MB';
const ACCOUNT = '7862583813845';
const userImageInput = document.getElementById('user_image');
const paymentImageInput = document.getElementById('payment_image');
const orderForm = document.getElementById('orderForm');

// DOM
const preview = document.getElementById('preview');
const btnShowPay = document.getElementById('btnShowPay');
const paymentCard = document.getElementById('paymentCard');
const qrImg = document.getElementById('qrImg');
const btnBack = document.getElementById('btnBack');
const btnIpaid = document.getElementById('btnIpaid');
const afterPaid = document.getElementById('afterPaid');
const btnSubmitOrder = document.getElementById('btnSubmitOrder');
const orderResult = document.getElementById('orderResult');
const confirmNote = document.getElementById('confirmNote');
const finalMethod = document.getElementById('finalMethod');

// New DOM elements
const videoModelSelect = document.getElementById('video_model');
const sampleVideoFrame = document.getElementById('sampleVideoFrame');

// helper: build VietQR image
function buildVietQR(amount, account, addInfo){
  const base = 'https://img.vietqr.io/image/';
  const info = encodeURIComponent(addInfo || '');
  return `${base}${BANK_CODE}-${account}-compact.png?amount=${encodeURIComponent(amount)}&addInfo=${info}`;
}

// helper: update iframe src
function updateVideoFrame(videoId) {
    sampleVideoFrame.src = `https://www.youtube.com/embed/${videoId}?rel=0`;
}

// preview image
userImageInput.addEventListener('change', (e)=>{
  const f = e.target.files[0];
  if(!f) { preview.src = placeholderSVG(); return; }
  const reader = new FileReader();
  reader.onload = function(ev){ preview.src = ev.target.result; }
  reader.readAsDataURL(f);
});

function placeholderSVG(){
  return 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="360" height="360"><rect width="100%" height="100%" fill="%23f8fbff"/><text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="%236b7c93" font-size="20">Chưa có ảnh</text></svg>';
}

// show payment
btnShowPay.addEventListener('click', ()=>{
  const customer = document.getElementById('customer_name').value.trim();
  const birthday = document.getElementById('birthday_name').value.trim();
  const email = (document.getElementById('email').value || '').trim();
  const zalo = (document.getElementById('zalo').value || '').trim();

  // Kiểm tra điều kiện bắt buộc
  if(!customer || !birthday){ alert('Vui lòng điền họ tên khách và tên người được chúc.'); return; }
  if(!videoModelSelect.value){ alert('Vui lòng chọn Mẫu Video.'); return; }
  if(!userImageInput.files.length){ alert('Vui lòng upload ảnh khách hàng.'); return; }
  if(!email && !zalo){ if(!confirm('Bạn chưa nhập email/zalo. Tiếp tục chấp nhận không có thông tin liên hệ?')) return; }

  const addInfo = `VIDEOAI - ${customer}`;
  qrImg.src = buildVietQR(AMOUNT, ACCOUNT, addInfo);
  document.getElementById('paymentCard').style.display = 'block';
  window.scrollTo({top:document.getElementById('paymentCard').offsetTop - 40, behavior:'smooth'});
});

btnBack.addEventListener('click', ()=>{ document.getElementById('paymentCard').style.display='none'; });

// mark paid
btnIpaid.addEventListener('click', ()=>{
  document.getElementById('paymentCard').style.display='none';
  afterPaid.style.display='block';
  afterPaid.scrollIntoView({behavior:'smooth'});
});

// =======================================================
// CÁC HÀM GỬI TELEGRAM
// =======================================================

// Hàm gửi file ảnh trực tiếp
async function sendTelegramPhoto(file, caption) {
    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendPhoto`;
    const formData = new FormData();
    formData.append('chat_id', TELEGRAM_CHAT_ID);
    formData.append('caption', caption);
    formData.append('photo', file);
    formData.append('parse_mode', 'Markdown');
    
    const response = await fetch(url, {
        method: 'POST',
        body: formData,
    });
    return response.json();
}

// Hàm gửi tin nhắn văn bản
async function sendTelegramMessage(text) {
    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    const payload = {
        chat_id: TELEGRAM_CHAT_ID,
        text: text,
        parse_mode: 'Markdown',
    };
    const response = await fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
    });
    return response.json();
}

// =======================================================
// LOGIC GỬI ĐƠN HÀNG (Dùng Telegram)
// =======================================================
btnSubmitOrder.addEventListener('click', async ()=>{
  btnSubmitOrder.disabled = true;
  orderResult.style.color='#6b7c93';
  orderResult.textContent='Đang gửi ảnh và thông báo đơn hàng qua Telegram...';

  try{
    
    // 1. Lấy và kiểm tra thông tin cần thiết
    const orderId = 'ORD' + Date.now().toString(36).toUpperCase();
    const customerName = document.getElementById('customer_name').value;
    const birthdayName = document.getElementById('birthday_name').value;
    const model = videoModelSelect.value;
    const email = document.getElementById('email').value;
    const zalo = document.getElementById('zalo').value;
    const message = document.getElementById('message').value || '_Không có lời nhắn._';
    const method = finalMethod.value;

    const userFile = userImageInput.files[0];
    const paymentFile = paymentImageInput.files[0];

    // Kiểm tra xem đã có ảnh khách hàng chưa
    if (!userFile) {
        throw new Error("Vui lòng chọn ảnh khách hàng.");
    }
    if (!model) {
        throw new Error("Vui lòng chọn Mẫu Video.");
    }

    // 2. Gửi ảnh khách hàng (BẮT BUỘC)
    let photoMessage = `✅ ĐƠN HÀNG MỚI: ${orderId}\n\n`;
    photoMessage += `*Mẫu Video:* ${model}\n`;
    photoMessage += `*Người chúc:* ${customerName}\n`;
    photoMessage += `*Người được chúc:* ${birthdayName}\n`;
    photoMessage += `*Yêu cầu:* ${message}`;

    const photoResult = await sendTelegramPhoto(userFile, photoMessage);
    
    if (photoResult.ok !== true) {
        throw new Error('Telegram Photo Upload Failed: ' + (photoResult.description || 'Lỗi không xác định'));
    }

    // 3. Gửi ảnh thanh toán (NẾU CÓ)
    let paymentLink = 'Không có ảnh xác nhận chuyển khoản.';
    if (paymentFile) {
        // Gửi ảnh thanh toán riêng biệt
        const paymentResult = await sendTelegramPhoto(paymentFile, `Ảnh thanh toán cho đơn hàng ${orderId}`);
        if (paymentResult.ok === true) {
            paymentLink = `Đã gửi ảnh thanh toán trong tin nhắn riêng.`;
        }
    }
    
    // 4. Gửi thông tin chi tiết (Làm bản tóm tắt)
    const summaryMessage = `
*--- THÔNG TIN CHI TIẾT ĐƠN HÀNG ${orderId} ---*

*Mẫu Video Đã Chọn:* ${model}
*Tên khách:* ${customerName}
*Tên sinh nhật:* ${birthdayName}
*Email:* ${email || '_(Không có)_'}
*Zalo:* ${zalo || '_(Không có)_'}
*Phương thức nhận:* ${method}
*Xác nhận thanh toán:* ${paymentLink}
    `;

    await sendTelegramMessage(summaryMessage);

    // 5. Xử lý thành công
    orderResult.style.color = '#044b1a';
    orderResult.innerHTML = `Gửi thành công! Đơn hàng <strong>${orderId}</strong> đã được gửi đến Telegram của bạn. Video sẽ hoàn thành trong <strong>24 giờ</strong>.`;
    
    // Reset form
    orderForm.reset();
    preview.src = placeholderSVG();
    afterPaid.style.display='none';
    confirmNote.style.display='block';
    updateVideoFrame(VIDEO_SAMPLES[0].id); // Reset video to default
    triggerFireworks();

  }catch(err){
    console.error('Lỗi toàn cục:', err);
    orderResult.style.color='#b91c1c';
    orderResult.textContent = 'Gửi đơn thất bại. Vui lòng kiểm tra F12 Console hoặc Bot Token/Chat ID.';
    alert('Đã xảy ra lỗi khi gửi đơn hàng. Vui lòng kiểm tra F12 Console để xem chi tiết lỗi.');
  }

  btnSubmitOrder.disabled = false;
});


// Simple fireworks effect
const canvas = document.getElementById('fireworks');
const ctx = canvas.getContext('2d');
let W = canvas.width = window.innerWidth; let H = canvas.height = window.innerHeight; window.addEventListener('resize', ()=>{ W=canvas.width=window.innerWidth; H=canvas.height=window.innerHeight; });
let particles = [];
function triggerFireworks(){
  for(let i=0;i<8;i++){
    const x = Math.random()*W*0.8 + W*0.1;
    const y = Math.random()*H*0.6 + H*0.1;
    createExplosion(x,y);
  }
  let t=0; const anim = setInterval(()=>{ update(); draw(); t+=100; if(t>3200){ clearInterval(anim); particles=[]; ctx.clearRect(0,0,W,H);} }, 1000/60);
}
function createExplosion(x,y){
  const hue = Math.floor(Math.random()*360);
  const count = 40 + Math.floor(Math.random()*40);
  for(let i=0;i<count;i++){
    const angle = Math.random()*Math.PI*2;
    const speed = 2 + Math.random()*5;
    particles.push({ x, y, vx:Math.cos(angle)*speed, vy:Math.sin(angle)*speed, life:40 + Math.random()*40, hue, size:1+Math.random()*3 });
  }
}
function update(){ particles.forEach(p=>{ p.x += p.vx; p.y += p.vy; p.vy += 0.06; p.vx *= 0.99; p.vy *= 0.99; p.life -= 1; }); particles = particles.filter(p=>p.life>0); }
function draw(){ ctx.clearRect(0,0,W,H); particles.forEach(p=>{ ctx.beginPath(); ctx.globalCompositeOperation='lighter'; ctx.fillStyle = `hsla(${p.hue},100%,60%,${Math.max(0, p.life/80)})`; ctx.arc(p.x,p.y,p.size,0,Math.PI*2); ctx.fill(); }); }

// init function
function initialize() {
    // Populate video model select box
    videoModelSelect.innerHTML = VIDEO_SAMPLES.map((sample, index) => 
        `<option value="${sample.name}" data-video-id="${sample.id}">${sample.name}</option>`
    ).join('');
    
    // Set initial video frame
    updateVideoFrame(VIDEO_SAMPLES[0].id);

    // Add event listener to update video frame on change
    videoModelSelect.addEventListener('change', (e) => {
        const selectedOption = e.target.options[e.target.selectedIndex];
        const videoId = selectedOption.getAttribute('data-video-id');
        updateVideoFrame(videoId);
    });

    preview.src = placeholderSVG();
}

// Run initialization
initialize();
</script>
</body>
</html>